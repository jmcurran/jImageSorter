/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jimagesorter;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.*;

/**
 *
 * @author jcur002
 */
public class SetClassesDlg extends javax.swing.JDialog {

        public enum DialogResult {
        OK_OPTION,
        CANCEL_OPTION
    }
       
    public DialogResult result;
    TreeMap<Integer, HotkeyDirectoryPair> mapKeyDirs;
    String strCurrentDirectory;
    List<String> Hotkeys;

    /**
     * Creates new form SetClassesDlg
     *
     * @param parent
     * @param modal
     * @param mapTableData
     */
    public SetClassesDlg(java.awt.Frame parent, boolean modal,
            TreeMap<Integer, HotkeyDirectoryPair> mapTableData,
            String strCurrentDirectory) {
        
        super(parent, modal);
        initComponents();
        this.strCurrentDirectory = strCurrentDirectory;
        resizeColumns();
        mapKeyDirs = new TreeMap<>();
        mapKeyDirs.putAll(mapTableData);
        setTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerNumClasses = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClasses = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.setPreferredSize(new java.awt.Dimension(47, 23));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("Number of classes:");

        jSpinnerNumClasses.setModel(new javax.swing.SpinnerNumberModel(2, 2, 10, 1));

        jTableClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null},
                {"2", null},
                {"3", null},
                {"4", null},
                {"5", null},
                {"6", null},
                {"7", null},
                {"8", null},
                {"9", null},
                {"0", null}
            },
            new String [] {
                "Hotkey", "Directory"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClassesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClasses);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinnerNumClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinnerNumClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resizeColumns() {
        TableColumnModel jTableColumnModel = jTableClasses.getColumnModel();
        int width = jTableColumnModel.getTotalColumnWidth();
        int numCols = 2;
        double[] ppnWidth = {0.15, 0.85};

        for (int i = 0; i < numCols; i++) {
            TableColumn col = jTableColumnModel.getColumn(i);
            int pWidth = (int) Math.round(ppnWidth[i] * width);
            col.setPreferredWidth(pWidth);
        }
    }

    public TreeMap<Integer, HotkeyDirectoryPair> getData() {
        return mapKeyDirs;
    }
    
    private void setTableData() {
        TableModel model = jTableClasses.getModel();
        Hotkeys = new ArrayList<>();
        
        for(int row = 0; row < 10; row++){
            HotkeyDirectoryPair hdp = (HotkeyDirectoryPair)mapKeyDirs.get(row + 1);
            Hotkeys.add(hdp.getHotkey());
            model.setValueAt(hdp.getHotkey(), row, 0);
            model.setValueAt(hdp.getDirectory(), row, 1);
        }
    }
    
    private void updateTableData() {
        int row = 0;
        TableModel model = jTableClasses.getModel();
        String strHotkey = (String)model.getValueAt(row, 0);
        String strDirectory = (String)model.getValueAt(row, 1);
        
        while(strDirectory != null & row < 10){
            try{
                mapKeyDirs.put(row, new HotkeyDirectoryPair(strHotkey, strDirectory));
            }catch(InvalidHotkeyException e){
                System.out.println(e);
            }
            
            row++;
            strHotkey = (String)model.getValueAt(row, 0);
            strDirectory = (String)model.getValueAt(row, 1);
        }
    }


    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        this.setVisible(false);
        result = DialogResult.OK_OPTION;
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.setVisible(false);
         result = DialogResult.CANCEL_OPTION;
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jTableClassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClassesMouseClicked
        int row = jTableClasses.getSelectedRow();
        int col = jTableClasses.getSelectedColumn();
        TableModel model = jTableClasses.getModel();
        
        if(col == 0){
            String curHotkey = (String) model.getValueAt(row, col);
            HotkeyChooser dlg = new HotkeyChooser((JFrame)this.getParent(), true, 
                                                   curHotkey,
                                                   Hotkeys);
            dlg.setVisible(true);
            
            if(!dlg.getSelectedKey().equals(curHotkey)){
                String newHotkey = dlg.getSelectedKey();
                model.setValueAt(newHotkey, row, col);
                Hotkeys.set(row, newHotkey);
                try{
                    mapKeyDirs.replace(row + 1, new HotkeyDirectoryPair(newHotkey, mapKeyDirs.get(row + 1).getDirectory()));
                }catch(InvalidHotkeyException e){
                    e.printStackTrace();
                }
            }
            
        }else if (col == 1) {
            JFileChooser fc;

            fc = new JFileChooser();
            fc.setCurrentDirectory(new File(strCurrentDirectory));
            fc.setDialogTitle("Select the image directory");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fc.setFileFilter(new FileFilter() {
                @Override
                public boolean accept(File f) {
                    return f.isDirectory();
                }

                @Override
                public String getDescription() {
                    return "Any folder";
                }

            });

            fc.setDialogType(JFileChooser.SAVE_DIALOG);
            fc.setApproveButtonText("Select");
            //    
            if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                String curDir = fc.getSelectedFile().getAbsolutePath();
                model.setValueAt(curDir, row, col);
                try{
                    mapKeyDirs.replace(row + 1, new HotkeyDirectoryPair(mapKeyDirs.get(row + 1).getHotkey(), curDir));
                }catch(InvalidHotkeyException e){
                    e.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_jTableClassesMouseClicked

    /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetClassesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetClassesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetClassesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetClassesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SetClassesDlg dialog = new SetClassesDlg(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerNumClasses;
    private javax.swing.JTable jTableClasses;
    // End of variables declaration//GEN-END:variables
}
